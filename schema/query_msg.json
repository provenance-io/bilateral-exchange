{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "get_ask"
      ],
      "properties": {
        "get_ask": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_bid"
      ],
      "properties": {
        "get_bid": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "get_contract_info"
      ],
      "properties": {
        "get_contract_info": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "search_asks"
      ],
      "properties": {
        "search_asks": {
          "type": "object",
          "required": [
            "search"
          ],
          "properties": {
            "search": {
              "$ref": "#/definitions/Search"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "search_bids"
      ],
      "properties": {
        "search_bids": {
          "type": "object",
          "required": [
            "search"
          ],
          "properties": {
            "search": {
              "$ref": "#/definitions/Search"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Search": {
      "type": "object",
      "required": [
        "search_type"
      ],
      "properties": {
        "page_number": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "page_size": {
          "anyOf": [
            {
              "$ref": "#/definitions/Uint128"
            },
            {
              "type": "null"
            }
          ]
        },
        "search_type": {
          "$ref": "#/definitions/SearchType"
        }
      }
    },
    "SearchType": {
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "all"
          ]
        },
        {
          "type": "object",
          "required": [
            "value_type"
          ],
          "properties": {
            "value_type": {
              "type": "object",
              "required": [
                "value_type"
              ],
              "properties": {
                "value_type": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "owner"
          ],
          "properties": {
            "owner": {
              "type": "object",
              "required": [
                "owner"
              ],
              "properties": {
                "owner": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
